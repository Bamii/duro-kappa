name: dockerize
run-name: ${{ github.actor }} 
on: 
  push:
    branches:
      - "dev"

jobs:
  dockerize_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      -
        name: Build and push doorman
        uses: docker/build-push-action@v4
        with:
          file: "backend.Dockerfile"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/duro-doorman:latest
          build-args: |
            "STORAGE_URL=${{ secrets.STORAGE_URL }}"
            "STORAGE_KEY=${{ secrets.STORAGE_KEY }}"
            "QUEUE_CONNECTION_URL=${{ secrets.QUEUE_CONNECTION_URL }}"
            "DATABASE_URL=${{ secrets.DATABASE_URL }}"
            "EMAIL_PUBLIC_KEY=${{ secrets.EMAIL_PUBLIC_KEY }}"
            "EMAIL_PRIVATE_KEY=${{ secrets.EMAIL_PRIVATE_KEY }}"
            NODE_ENV=production

      -
        name: Build and push butler
        uses: docker/build-push-action@v4
        with:
          file: "frontend.Dockerfile"
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/duro-butler:latest

      -
        name: Build and push door
        uses: docker/build-push-action@v4
        with:
          file: "door.Dockerfile"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/duro-door:latest

      -
        name: Build and push tray
        uses: docker/build-push-action@v4
        with:
          file: "cron.Dockerfile"
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/duro-tray:latest
          build-args: |
            "STORAGE_URL=${{ secrets.STORAGE_URL }}"
            "STORAGE_KEY=${{ secrets.STORAGE_KEY }}"
            "QUEUE_CONNECTION_URL=${{ secrets.QUEUE_CONNECTION_URL }}"
            "DATABASE_URL=${{ secrets.DATABASE_URL }}"
            "EMAIL_PUBLIC_KEY=${{ secrets.EMAIL_PUBLIC_KEY }}"
            "EMAIL_PRIVATE_KEY=${{ secrets.EMAIL_PRIVATE_KEY }}"
            NODE_ENV=production


  deploy:
    runs-on: ubuntu-latest
    needs: dockerize_and_publish
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Deploy to Staging server
        uses: easingthemes/ssh-deploy@main
        env:
          STORAGE_URL: ${{ secrets.STORAGE_URL }}
          STORAGE_KEY: ${{ secrets.STORAGE_KEY }}
          QUEUE_CONNECTION_UR: =${{ secrets.QUEUE_CONNECTION_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          EMAIL_PUBLIC_KEY: ${{ secrets.EMAIL_PUBLIC_KEY }}
          EMAIL_PRIVATE_KEY: ${{ secrets.EMAIL_PRIVATE_KEY }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i"
          SOURCE: "deployments/terraform/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          SCRIPT_BEFORE: | 
            ls -al
          SCRIPT_AFTER: |
            cd $REMOTE_HOST
            pwd
            ./deploy.sh


